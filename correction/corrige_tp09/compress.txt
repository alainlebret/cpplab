PROC compresser(FICHIER entree, FICHIER sortie)
VAR octetPrecedent : OCTET;
    octetCourant : OCTET;
    nombreRepetitions : ENTIER;
DEBUT
    nombreRepetitions <-- 1;  
    octetPrecedent <-- lireOctet(entree); 

    REPETER
   	    octetCourant <-- lireOctet(entree);
       	SI (octetCourant = octetPrecedent) 
            nombreRepetitions <-- nombreRepetitions + 1; 
        SINON
            SI (nombreRepetitions > seuil) 
                ecrireOctet(sortie, codeRepetition);  
                ecrireOctet(sortie, nombreRepetitions);
                ecrireOctet(sortie, octetPrecedent); 
            SINON
                SI (nombreRepetitions > 1)
                    POUR i <-- 1 A nombreRepetitions
                        ecrireOctet(sortie, octetPrecedent);
                    FINP
                SINON
                    ecrireOctet(sortie, octetPrecedent);
                FINSI
            FINSI
        FINSI
        nombreRepetitions <-- 1;
        octetPrecedent <-- octetCourant;
    JUSQU'A (fin entree);
FIN


PROC decompresser(FICHIER entree, FICHIER sortie)
VAR codeARepeter : OCTET;
    octetCourant : OCTET;
    nombreRepetitions : ENTIER; 

DEBUT
    // boucle de lecture des octets tant que la fin de fichier n'est pas
    // atteinte.
    TANT QUE (non fin de entree)
        octetCourant <- lireOctet(entree);
        SI (octetCourant = codeRepetition) 
            nombreRepetitions <- lireOctet(entree);
            codeARepeter <- lireOctet(entree);
            POUR i <- 1 A nombreRepetitions
                ecrireOctet(sortie, codeARepeter);
            FINP
        SINON
            ecrireOctet(sortie, octetCourant);
        FINSI
    FINTQ
FIN
