<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="345px" preserveAspectRatio="none" style="width:600px;height:345px;" version="1.1" viewBox="0 0 600 345" width="600px" zoomAndPan="magnify"><defs><filter height="300%" id="ffd7gf7phhek3" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class fstream--><rect fill="#FEFECE" filter="url(#ffd7gf7phhek3)" height="48" id="fstream" style="stroke: #A80036; stroke-width: 1.5;" width="80" x="509" y="65.5"/><ellipse cx="524" cy="81.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M526.3438,77.1719 L526.5156,77.25 C526.7344,76.9375 526.9375,76.8438 527.2344,76.8438 C527.5313,76.8438 527.8125,76.9844 527.9688,77.25 C528.0625,77.4063 528.0781,77.5313 528.0781,77.9688 L528.0781,79.3906 C528.0781,79.8125 528.0469,80 527.9375,80.1563 C527.7656,80.375 527.5,80.5156 527.2344,80.5156 C527.0156,80.5156 526.7813,80.4063 526.6406,80.2656 C526.5,80.1406 526.4688,80.0156 526.4063,79.6094 C526.3125,79.2031 526.1406,78.9844 525.6563,78.7031 C525.1875,78.4531 524.5781,78.2969 524,78.2969 C522.2656,78.2969 521.0156,79.6094 521.0156,81.3906 L521.0156,82.4844 C521.0156,84.1875 522.3125,85.2813 524.3594,85.2813 C525.125,85.2813 525.8125,85.1563 526.2344,84.8906 C526.4219,84.7969 526.4219,84.7969 526.875,84.3125 C527.0625,84.125 527.2656,84.0469 527.4844,84.0469 C527.9531,84.0469 528.3438,84.4375 528.3438,84.8906 C528.3438,85.2813 528.0156,85.7344 527.4375,86.1406 C526.6875,86.6875 525.5313,86.9844 524.3125,86.9844 C521.4219,86.9844 519.3125,85.0938 519.3125,82.5156 L519.3125,81.3906 C519.3125,78.6719 521.3125,76.5938 523.9375,76.5938 C524.8125,76.5938 525.4063,76.7344 526.3438,77.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="538" y="85.6543">fstream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="510" x2="588" y1="97.5" y2="97.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="510" x2="588" y1="105.5" y2="105.5"/><!--class Crypteur--><rect fill="#FEFECE" filter="url(#ffd7gf7phhek3)" height="163.2422" id="Crypteur" style="stroke: #A80036; stroke-width: 1.5;" width="444" x="6" y="8"/><ellipse cx="197.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M199.5938,19.6719 L199.7656,19.75 C199.9844,19.4375 200.1875,19.3438 200.4844,19.3438 C200.7813,19.3438 201.0625,19.4844 201.2188,19.75 C201.3125,19.9063 201.3281,20.0313 201.3281,20.4688 L201.3281,21.8906 C201.3281,22.3125 201.2969,22.5 201.1875,22.6563 C201.0156,22.875 200.75,23.0156 200.4844,23.0156 C200.2656,23.0156 200.0313,22.9063 199.8906,22.7656 C199.75,22.6406 199.7188,22.5156 199.6563,22.1094 C199.5625,21.7031 199.3906,21.4844 198.9063,21.2031 C198.4375,20.9531 197.8281,20.7969 197.25,20.7969 C195.5156,20.7969 194.2656,22.1094 194.2656,23.8906 L194.2656,24.9844 C194.2656,26.6875 195.5625,27.7813 197.6094,27.7813 C198.375,27.7813 199.0625,27.6563 199.4844,27.3906 C199.6719,27.2969 199.6719,27.2969 200.125,26.8125 C200.3125,26.625 200.5156,26.5469 200.7344,26.5469 C201.2031,26.5469 201.5938,26.9375 201.5938,27.3906 C201.5938,27.7813 201.2656,28.2344 200.6875,28.6406 C199.9375,29.1875 198.7813,29.4844 197.5625,29.4844 C194.6719,29.4844 192.5625,27.5938 192.5625,25.0156 L192.5625,23.8906 C192.5625,21.1719 194.5625,19.0938 197.1875,19.0938 C198.0625,19.0938 198.6563,19.2344 199.5938,19.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="217.75" y="28.1543">Crypteur</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="449" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="12" y="54.2104">string clef;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="449" y1="60.8047" y2="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="12" y="75.0151">Crypteur(string uneclef);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="12" y="87.8198">Crypteur();</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="12" y="100.6245">string getclef() const;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="12" y="113.4292">void setclef(const string &amp;aclef);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="12" y="126.2339">int getlongueurClef() const;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="12" y="139.0386">virtual void chiffrer(const char *fichierEntree, const char *fichierSortie) = 0;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="12" y="151.8433">friend ostream &amp;operator&lt;&lt;(ostream &amp;os, Crypteur &amp;unCrypteur);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="12" y="164.6479">friend istream &amp;operator&gt;&gt;(istream &amp;is, Crypteur &amp;unCrypteur);</text><!--class CrypteurXOR--><rect fill="#FEFECE" filter="url(#ffd7gf7phhek3)" height="86.4141" id="CrypteurXOR" style="stroke: #A80036; stroke-width: 1.5;" width="381" x="37.5" y="248"/><ellipse cx="185.25" cy="264" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M187.5938,259.6719 L187.7656,259.75 C187.9844,259.4375 188.1875,259.3438 188.4844,259.3438 C188.7813,259.3438 189.0625,259.4844 189.2188,259.75 C189.3125,259.9063 189.3281,260.0313 189.3281,260.4688 L189.3281,261.8906 C189.3281,262.3125 189.2969,262.5 189.1875,262.6563 C189.0156,262.875 188.75,263.0156 188.4844,263.0156 C188.2656,263.0156 188.0313,262.9063 187.8906,262.7656 C187.75,262.6406 187.7188,262.5156 187.6563,262.1094 C187.5625,261.7031 187.3906,261.4844 186.9063,261.2031 C186.4375,260.9531 185.8281,260.7969 185.25,260.7969 C183.5156,260.7969 182.2656,262.1094 182.2656,263.8906 L182.2656,264.9844 C182.2656,266.6875 183.5625,267.7813 185.6094,267.7813 C186.375,267.7813 187.0625,267.6563 187.4844,267.3906 C187.6719,267.2969 187.6719,267.2969 188.125,266.8125 C188.3125,266.625 188.5156,266.5469 188.7344,266.5469 C189.2031,266.5469 189.5938,266.9375 189.5938,267.3906 C189.5938,267.7813 189.2656,268.2344 188.6875,268.6406 C187.9375,269.1875 186.7813,269.4844 185.5625,269.4844 C182.6719,269.4844 180.5625,267.5938 180.5625,265.0156 L180.5625,263.8906 C180.5625,261.1719 182.5625,259.0938 185.1875,259.0938 C186.0625,259.0938 186.6563,259.2344 187.5938,259.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="205.75" y="268.1543">CrypteurXOR</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="417.5" y1="280" y2="280"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="417.5" y1="288" y2="288"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="43.5" y="302.2104">CrypteurXOR(string uneclef);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="43.5" y="315.0151">void chiffrer(const char *fichierEntree, const char *fichierSortie);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="43.5" y="327.8198">void chiffrer(istream &amp;entree, ostream &amp;sortie);</text><!--link Crypteur to fstream--><path d="M463.228,89.5 C480.095,89.5 495.545,89.5 508.543,89.5 " fill="none" id="Crypteur-fstream" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="450.07,89.5,456.07,93.5,462.07,89.5,456.07,85.5,450.07,89.5" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="468.5" y="82.5669">flux</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="458.1944" y="86.2954">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="492.902" y="85.2892">2</text><!--link Crypteur to CrypteurXOR--><path d="M228,191.317 C228,211.254 228,231.134 228,247.7703 " fill="none" id="Crypteur-CrypteurXOR" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="221,191.069,228,171.069,235,191.069,221,191.069" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="229" y="214.0669">Inheritance</text><!--
@startuml
class fstream {
}

class Crypteur {
    string clef;

    Crypteur(string uneclef);
    Crypteur();
    string getclef() const;
    void setclef(const string &aclef);
    int getlongueurClef() const;
    virtual void chiffrer(const char *fichierEntree, const char *fichierSortie) = 0;
    friend ostream &operator<<(ostream &os, Crypteur &unCrypteur);
    friend istream &operator>>(istream &is, Crypteur &unCrypteur);
}

class CrypteurXOR {
    CrypteurXOR(string uneclef);
    void chiffrer(const char *fichierEntree, const char *fichierSortie);
    void chiffrer(istream &entree, ostream &sortie);
}

Crypteur "1" *-right- "2" fstream: flux
Crypteur <|-down- CrypteurXOR: Inheritance
@enduml

PlantUML version 1.2018.02(Fri Mar 09 17:20:44 UTC 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>